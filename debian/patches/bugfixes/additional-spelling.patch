Description: Additional spelling fixes (found by lintian)
 Apply additional spelling fixes, as found by lintian, to the source
 code and man pages.
Author: Christian Seiler <christian@iwakd.de>
Forwarded: not-yet
Last-Update: 2016-07-27
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/doc/iscsi_discovery.8
+++ b/doc/iscsi_discovery.8
@@ -34,7 +34,7 @@ init.d startup script.
 .\" .SH OPTIONS
 .TP
 .BI [-p=]\fIport\-number\fP
-set the port number (defualt is 3260).
+set the port number (default is 3260).
 .TP
 .BI [-d]
 print debugging information.
@@ -52,7 +52,7 @@ force the transport specified by the arg
 manual startup - will set manual startup (default is automatic startup).
 .TP
 .BI [-l]
-login - login to the new discovered nodes (defualt is false).
+login - login to the new discovered nodes (default is false).
 
 .SH AUTHOR
 Written by Dan Bar Dov
--- a/doc/iscsiadm.8
+++ b/doc/iscsiadm.8
@@ -228,7 +228,7 @@ display help text and exit
 
 .TP
 \fB\-H\fR, \fB\-\-host=\fI[hostno|MAC]\fR
-The host agrument specifies the SCSI host to use for the operation. It can be
+The host argument specifies the SCSI host to use for the operation. It can be
 the scsi host number assigned to the host by the kernel's scsi layer, or the
 MAC address of a scsi host.
 
@@ -303,7 +303,7 @@ This option is only valid for discovery
 .TP
 \fB\-L\fR, \fB\-\-loginall=\fI[all|manual|automatic]\fR
 For node mode, login all sessions with the node or conn startup values passed
-in or all running sesssion, except ones marked onboot, if all is passed in.
+in or all running session, except ones marked onboot, if all is passed in.
 .IP
 This option is only valid for node mode (it is valid but not functional
 for session mode).
@@ -445,7 +445,7 @@ This option is only valid for node and s
 .TP
 \fB\-U\fR, \fB\-\-logoutall=\fI[all,manual,automatic]\fR
 logout all sessions with the node or conn startup values passed in or all
-running sesssion, except ones marked onboot, if all is passed in.
+running session, except ones marked onboot, if all is passed in.
 .IP
 This option is only valid for node mode (it is valid but not functional
 for session mode).
--- a/usr/iscsid.c
+++ b/usr/iscsid.c
@@ -324,7 +324,7 @@ static void catch_signal(int signo)
 static void missing_iname_warn(char *initiatorname_file)
 {
 	log_error("Warning: InitiatorName file %s does not exist or does not "
-		  "contain a properly formated InitiatorName. If using "
+		  "contain a properly formatted InitiatorName. If using "
 		  "software iscsi (iscsi_tcp or ib_iser) or partial offload "
 		  "(bnx2i or cxgbi iscsi), you may not be able to log "
 		  "into or discover targets. Please create a file %s that "
--- a/iscsiuio/docs/iscsiuio.8
+++ b/iscsiuio/docs/iscsiuio.8
@@ -62,7 +62,7 @@ ERROR         1 - Only print critical er
 .TP
 .TP
 .BI -f
-This is to enable forground mode so that this application doesn't get sent
+This is to enable foreground mode so that this application doesn't get sent
 into the background.
 .PP
 .TP
--- a/iscsiuio/src/unix/libs/bnx2.c
+++ b/iscsiuio/src/unix/libs/bnx2.c
@@ -1054,7 +1054,7 @@ static int bnx2_read(nic_t *nic, packet_
 				/*  If the NIC passes up a packet bigger
 				 *  then the RX buffer, flag it */
 				LOG_ERR(PFX "%s: invalid packet length %d "
-					"recieve ", nic->log_name, len);
+					"receive ", nic->log_name, len);
 			}
 		}
 
--- a/iscsiuio/src/unix/nic.c
+++ b/iscsiuio/src/unix/nic.c
@@ -735,7 +735,7 @@ int nic_process_intr(nic_t *nic, int dis
 
 	/*  Simple sanity checks */
 	if (discard_check != 1 && nic->state != NIC_RUNNING) {
-		LOG_ERR(PFX "%s: Couldn't process interupt NIC not running",
+		LOG_ERR(PFX "%s: Couldn't process interrupt NIC not running",
 			nic->log_name);
 		return -EBUSY;
 	}
--- a/usr/iscsiadm.c
+++ b/usr/iscsiadm.c
@@ -1632,7 +1632,7 @@ static int delete_host_chap_info(uint32_
 		goto exit_delete_chap;
 	}
 
-	log_info("Deleteing CHAP index: %d", chap_tbl_idx);
+	log_info("Deleting CHAP index: %d", chap_tbl_idx);
 	rc = ipc->delete_chap(t->handle, host_no, chap_tbl_idx);
 	if (rc < 0) {
 		log_error("CHAP Delete failed.");
--- a/usr/netlink.c
+++ b/usr/netlink.c
@@ -1571,7 +1571,7 @@ static int ctldev_handle(void)
 				    ev->r.host_event.host_no);
 			break;
 		default:
-			log_debug(7, "Host%u: Unknwon host event: %u.",
+			log_debug(7, "Host%u: Unknown host event: %u.",
 				  ev->r.host_event.host_no,
 				  ev->r.host_event.code);
 		}
@@ -1597,7 +1597,7 @@ static int ctldev_handle(void)
 			 * see their
 			 * stuff. Just drop it.
 			 */
-			log_debug(7, "Got unknwon event %d. Dropping.",
+			log_debug(7, "Got unknown event %d. Dropping.",
 				  ev->type);
 		drop_data(nlh);
 		return 0;
